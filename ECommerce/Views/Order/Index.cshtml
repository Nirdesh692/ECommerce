@using ECommerce.Helper
@model PaginatedList<ECommerce.Models.Order>

@{
    ViewData["Title"] = "Orders";
    int serialNumber = 1 + (Model.PageNumber - 1) * 10;
    var orderStatusList = ViewBag.orderStatusId as SelectList;
    var statusList = orderStatusList.Where(item=>(item as SelectListItem)?.Text != "Cancelled").ToList();
    ViewBag.StatusList = new SelectList(statusList, "Value", "Text");
}

<h1 class="text-center">Orders</h1>
<div class="container">

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    S.N.
                </th>
                <th>
                    Customer Name
                </th>
                <th>
                    Order Date
                </th>
                <th>
                    Order Status
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model.Items)
            {
                <tr data-url="@Url.Action("Details", new { id = item.Id })" onclick="window.location=this.dataset.url">
                    <td>
                        @serialNumber
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.FirstName)
                        @Html.DisplayFor(modelItem => item.User.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderDate)
                    </td>
                    <td>
                        <form method="post" asp-controller="Order" asp-action="UpdateOrderStatus" id="statusForm_@item.Id">
                            <div class="form-group">
                                <input type="hidden" name="orderId" value="@item.Id">
                                @if(item.OrderStatus.Status == "Cancelled")
                                {
                                    <select class="form-control" disabled>
                                        <option selected>Cancelled</option>
                                    </select>
                                }
                                else
                                {
                                    <select asp-for="@item.OrderStatusId" name="orderStatusId" class="form-control" asp-items="ViewBag.StatusList" onclick="event.stopPropagation();" onchange="submitForm(`@item.Id`);">
                                        <option>Select Order Status</option>
                                    </select>
                                }
                            </div>
                        </form>
                    </td>
                </tr>
                serialNumber++;
            }
        </tbody>
    </table>
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageNumber - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageNumber + 1 })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>
<div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Status Updated.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div> 
<script>
    function submitForm(orderId) {    
        var form = document.getElementById('statusForm_' + orderId);
        var orderStatusId = form.querySelector('select[name="orderStatusId"]').value;

        fetch('@Url.Action("UpdateOrderStatus", "Order")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                Id: orderId,
                orderStatusId: orderStatusId
            })
        })
            .then(response => {
                if (response.ok) {
                    var modal = new bootstrap.Modal(document.getElementById('statusModal'));
                    modal.show();
                } else {
                    console.error("Failed to update the order status.");
                }
            })
            .catch(error => console.error('Error submitting the status form:', error));
    }
</script>