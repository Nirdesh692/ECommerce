@using ECommerce.Helper
@model PaginatedList<ECommerce.Models.Order>

@{
    ViewData["Title"] = "Your Orders";
    string cancelStatusId = null;
    if (ViewData["orderStatusId"] is SelectList orderStatusList)
    {
        foreach (var item in orderStatusList)
        {
            if (item is SelectListItem listItem && listItem.Text == "Cancelled")
            {
                cancelStatusId = listItem.Value;
                break;
            }
        }
    }
}

<div class="row">
    <div class="col-12">
        <p class="h5">Your Orders</p>
        <hr/>

        @if (Model.Items !=null && Model.Items.Any())
        {
            foreach (var item in Model.Items)
            {


                <div class="row">
                    <dl class="col-sm-3">

                        <dt>Order Id:</dt>
                        <dd>
                            @Html.DisplayFor(model => item.Id)
                        </dd>
                        <dd>
                            Date: @Html.DisplayFor(model => item.OrderDate)
                        </dd>
                    </dl>
                    <dl class="col-sm-3">
                        <dt>Shipping Address</dt>
                        <dd>
                            @Html.DisplayFor(model=>item.Shipping.Address)
                        </dd>
                    </dl>
                    <dl class="col-sm-3">
                        <dt>Order Status</dt>
                        <dd>
                            @Html.DisplayFor(model=>item.OrderStatus.Status)
                        </dd>
                    </dl>
                    <dl class="col-sm-3">
                        <dd>
                            <button class="btn btn-danger statusId" data-orderStatusId="@cancelStatusId" onclick="submitForm('@item.Id', this);"
                            @(item.OrderStatus.Status != "Pending" ? "disabled" : "")>
                                Cancel
                            </button>

                        </dd>
                    </dl>
                </div>
                <hr />
            }
        }
        else
        {
            <p class="fs-5 disabled"> No Orders found</p>
        }
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Orders", new { pageNumber = Model.PageNumber - 1 })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Orders", new { pageNumber = i })">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Orders", new { pageNumber = Model.PageNumber + 1 })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
<div class="modal fade" id="statusModal" tabindex="-1" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Status Updated.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" onclick="location.reload();">OK</button>
            </div>
        </div>
    </div>
</div>
<script>
    function submitForm(orderId, buttonElement) {
        var orderStatusId = buttonElement.getAttribute('data-orderStatusId');

        fetch('@Url.Action("UpdateOrderStatus", "Order")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                Id: orderId,
                orderStatusId: orderStatusId
            })
        })
            .then(response => {
                if (response.ok) {
                    const statusModal = new bootstrap.Modal(document.getElementById('statusModal'));
                    statusModal.show();
                } else {
                    console.error("Failed to update the order status.");
                }
            })
            .catch(error => console.error('Error submitting the status form:', error));
    }
</script>