@model ECommerce.ViewModel.ProductViewModel
@{
    ViewData["Title"] = "Product's Details";
}
<div class="container">
    <dl class="row m-auto">
        <div class="col-6">
            <img class="img-thumbnail " src="@Model.ImageUrl" alt="image.jpg" />
        </div>
        <div class="col-6">

            <p class="h3">Product's Details</p>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Name)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Price)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Price)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.StockQuantity)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.StockQuantity)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Category)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Category.Name)
            </dd>
            @if (!User.IsInRole("Admin"))
            {
                <div class="d-flex justify-content-evenly">
                        <button class="btn btn-outline-primary addToCartBtn" data-productId="@Model.Id" onclick="event.stopPropagation(); addToCart(this)">
                            Add To Cart
                        </button>
@*                     <form method="post" asp-controller="Cart" asp-action="BuyNow">
                        <input type="hidden" name="productId" value="@Html.ValueFor(model => model.Id)" />
                        <button class="btn btn-primary">Buy Now</button>
                    </form> *@
                </div> 
            }
        </div>
    </dl>
</div>
<div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="cartModalMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
                <a href="/cart" class="btn btn-success" id="cart-login-btn">View Cart</a>
            </div>
        </div>
    </div>
</div>
<script>
    function addToCart(button){
        const productId = button.getAttribute("data-productId");
        const quantity = 1;
        console.log(productId)
        console.log('@Url.Action("AddToCart", "Cart")');

        fetch('@Url.Action("AddToCart", "Cart")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId: productId, quantity: quantity })
        })
            .then(response => {
                console.log("Response status: ", response.status);
                if (!response.ok) {
                    throw new Error('Network response was not ok.');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    const modalMessage = document.getElementById('cartModalMessage');
                    modalMessage.innerText = data.message;
                    if (data.message === "Please Login First.") {
                        const cartBtn = document.getElementById('cart-login-btn');
                        cartBtn.innerText = "Redirect to Login";
                    }
                    const cartModal = new bootstrap.Modal(document.getElementById('cartModal'));
                    cartModal.show();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error.message);
                alert('An error occurred while adding the product to the cart. ' + error.message);
            });
    }
</script>