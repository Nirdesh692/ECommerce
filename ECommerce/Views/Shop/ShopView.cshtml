@model ECommerce.ViewModel.ShopViewModel
@{
    ViewData["title"] = "Shop";
    string searchString = ViewContext.HttpContext.Request.Query["searchString"].ToString();
}
<div class="row">
    <div class="col-2 d-flex ">
        <div class="navbar flex-column">
            <form method="get" role="search" action="@Url.Action("ShopView", "Shop")">
                <input name="searchString" class="form-control me-2" type="search" placeholder="Search" aria-label="Search"
                       value="@searchString" />
                <button class="btn btn-outline-success" type="submit">Search</button>

                <select asp-for="CategoryId" asp-items="ViewBag.CategoryId" onchange="submit();">
                    <option>Categories</option>
                </select>
            </form>
        </div>
    </div>
    <div class="col-10">
    <div class="row">
        @if (string.IsNullOrEmpty(searchString)) { <p class="h3"> All Products</p> }
        else{ <p class="h3">Search results for "@searchString"</p>}
    </div>
    <div class="row">
        @foreach (var product in Model.Products.Items)
        {
            if (product != null)
            {
                <div class="col-md-3 mb-3">
                    <div class="card shadow h-100" data-url="@Url.Action("Details", "Product", new { id = product.Id })" onclick="window.location=this.dataset.url">
                        <img src="@product.ImageUrl" class="card-img-top" alt="...">
                        <div class="card-body">
                            <div class="row d-flex">
                                <div class="col">
                                    <h5 class="card-title">@product.Name</h5>
                                    <p class="card-text">Rs @product.Price/-</p>
                                    @if(product.StockQuantity < 0)
                                    {
                                        <p class="disabled">(Out of Stock)</p>
                                    }
                                </div>
                                <div class="col">
                                    <button class="btn btn-outline-primary addToCartBtn" data-productId="@product.Id" onclick="event.stopPropagation(); addToCart(this)">
                                        <iconify-icon class="cart" icon="solar:cart-line-duotone" noobserver></iconify-icon>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.Products.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("ShopVIew", new { pageNumber = Model.Products.PageNumber - 1 })" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }

            @for (int i = 1; i <= Model.Products.TotalPages; i++)
            {
                <li class="page-item @(i == Model.Products.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("ShopView", new { pageNumber = i })">@i</a>
                </li>
            }

            @if (Model.Products.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("ShopView", new { pageNumber = Model.Products.PageNumber + 1 })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>
<div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="cartModalMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal">OK</button>
                <a href="/cart" class="btn btn-success" id="cart-login-btn">View Cart</a>
            </div>
        </div>
    </div>
</div>
<script>
    function addToCart(button){
        const productId = button.getAttribute("data-productId");
        const quantity = 1;
        console.log(productId)
        console.log('@Url.Action("AddToCart", "Cart")');

        fetch('@Url.Action("AddToCart", "Cart")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId: productId, quantity: quantity })
        })
            .then(response => {
                console.log("Response status: ", response.status);
                if (!response.ok) {
                    throw new Error('Network response was not ok.');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    const modalMessage = document.getElementById('cartModalMessage');
                    modalMessage.innerText = data.message;
                    if (data.message === "Please Login First.") {
                        const cartBtn = document.getElementById('cart-login-btn');
                        cartBtn.innerText = "Redirect to Login";
                    }
                    const cartModal = new bootstrap.Modal(document.getElementById('cartModal'));
                    cartModal.show();
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error.message);
                alert('An error occurred while adding the product to the cart. ' + error.message);
            });
    }
    function submit(){

    }
</script>